/* _baseStyles.scss think of BASE STYLES AS GLOBAL, REUSABLE CODE FOR YOUR WEBSITE*/

.wrapper {
    max-width: 1260px;
    width: 90%;
    margin: 0 auto;
}


/* BUTTONS BASE STYLES _baseStyles.scss */

button {
    color: $primary;
    background-color: transparent;
    padding: 18px 36px;
    border: 2px solid $primary;
    font-size: 0.8rem;
    font-weight: bold;
    line-height: 1.2rem;
    text-align: center;
    cursor: pointer;
    transition: 0.3s;

    &:hover {
        background-color: $primary;
        color: $solidWhite;
    }

    &:focus {
        background-color: $primary;
        color: $solidWhite;
    }


// the &. indicates anything with a class of SECONDARY creates an inversion of button styles. any button with a class of secondary or a class of solid will change the styles 

    &.secondary {
        background-color: transparent;
        border-color: $solidWhite;
        color: $solidWhite;
        padding: 8px 12px;

        &:hover {
            background-color: $solidWhite;
            color: $primary;
        }

        &:focus {
            background-color: $solidWhite;
            color: $primary;
        }
    }

    &.solid {
        color: $solidWhite;
        background-color: $primary;

        &:hover {
            color: $primary;
            background-color: $solidWhite;
        }
    }

    /* style the button in the main nav menu to look just like an icon */
    &.menuIcon {
        display: inherit;
        padding: 0;
        border: none;

        &:hover {
            background-color: transparent;
        }

        &:focus {
            background-color: transparent;
        }
    }
}


// this is an ANCHOR TAG with a class of BUTTON... style it like this!
a {
    display: inline-block;
    &.button {
        color: $primary;
        background-color: transparent;
        padding: 18px 36px;
        border: 2px solid $primary;
        font-size: 0.8rem;
        font-weight: bold;
        line-height: 1.2rem;
        text-align: center;
        transition: 0.3s;

        &:hover {
            background-color: $primary;
            color: $solidWhite;
        }

        &:focus {
            background-color: $primary;
            color: $solidWhite;
        }
    }
}
// this ensures that image elements obey the dimensions of their parents. 
// this indicates that we want the images to be the width of its parent. it allows the images to sit aligned 3 in a row on the shop page (along with the flex-basis of calc 100% / 3
img {
    // NOTE: this may need to be overwritten in further partials to be a width property (if image is not stretching to take up available space within the parent container)
    max-width: 100%;
    display: block;
}